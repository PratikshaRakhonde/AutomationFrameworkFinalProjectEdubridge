<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-QC14U49" failures="0" tests="15" name="com.TestCases.AllTestCases" time="-1693909376.000" errors="1" timestamp="2023-09-05T15:53:23 IST" skipped="14">
  <testcase classname="com.TestCases.AllTestCases" name="setup" time="-1693909376.000">
    <error message="
Can inject only one of &lt;ITestContext, XmlTest, Method, Object[], ITestResult&gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:306)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setup -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithValidCredentials" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithValidCredentials" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.TestCases.AllTestCases" name="verifySearchWithValidProduct" time="0.000">
    <skipped/>
  </testcase> <!-- verifySearchWithValidProduct -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyRegisteringAnAccountWithMandatoryFields" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithValidCredentials" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyRegisteringAccountByProvidingAllFields" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByProvidingAllFields -->
  <testcase classname="com.TestCases.AllTestCases" name="verifySearchWithInvalidProduct" time="0.000">
    <skipped/>
  </testcase> <!-- verifySearchWithInvalidProduct -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithInvalidCredentials" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials -->
  <testcase classname="com.TestCases.AllTestCases" name="verifySearchWithoutAnyProduct" time="0.000">
    <skipped/>
  </testcase> <!-- verifySearchWithoutAnyProduct -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithInvalidEmailAndValidPassword" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyRegisteringAccountWithExistingEmailAddress" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithExistingEmailAddress -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyRegisteringAccountWithoutFillingAnyDetails" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutFillingAnyDetails -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithValidEmailAndInvalidPassword" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
  <testcase classname="com.TestCases.AllTestCases" name="verifyLoginWithoutProvidingCredentials" time="0.000">
    <skipped/>
  </testcase> <!-- verifyLoginWithoutProvidingCredentials -->
</testsuite> <!-- com.TestCases.AllTestCases -->
